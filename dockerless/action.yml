name: 'actionlint with reviewdog (dockerless)'
description: 'run actionlint with reviewdog.'
author: '@shogo82148'
inputs:
  github_token:
    description: 'GITHUB_TOKEN.'
    default: '${{ github.token }}'
    required: true
  tool_name:
    description: 'Tool name to use for reviewdog reporter'
    default: 'actionlint'
    required: true
  level:
    description: 'Report level for reviewdog [info,warning,error]'
    default: 'error'
    required: true
  reporter:
    description: |
      Reporter of reviewdog command [github-pr-check,github-pr-review,github-check].
      Default is github-pr-check.
      github-pr-review can use Markdown and add a link to rule page in reviewdog reports.
    default: 'github-pr-check'
    required: true
  filter_mode:
    description: |
      Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
      Default is file.
    default: 'file'
    required: true
  fail_level:
    description: |
      If set to `none`, always use exit code 0 for reviewdog. Otherwise, exit code 1 for reviewdog if it finds at least 1 issue with severity greater than or equal to the given level.
      Possible values: [none,any,info,warning,error]
      Default is `none`.
    default: 'none'
  fail_on_error:
    description: |
      Deprecated, use `fail_level` instead.
      Exit code for reviewdog when errors are found [true,false]
      Default is `false`.
    deprecationMessage: Deprecated, use `fail_level` instead.
    default: 'false'
    required: true
  reviewdog_flags:
    description: 'Additional reviewdog flags'
    default: ''
    required: false
  actionlint_flags:
    description: 'Additional actionlint flags'
    default: ''
    required: false
runs:
  using: 'composite'
  steps:
    - name: Read versions
      id: versions
      shell: bash
      # language=bash
      run: |
        source "${{ github.action_path }}/../.versions"

        echo "reviewdog=${REVIEWDOG_VERSION}" >> $GITHUB_OUTPUT
        echo "actionlint=${ACTIONLINT_VERSION}" >> $GITHUB_OUTPUT
      
    - uses: reviewdog/action-setup@v1
      with:
        reviewdog_version: ${{ steps.versions.outputs.reviewdog }}
        
    - name: Install actionlint
      shell: bash
      env:
        ACTIONLINT_VERSION: "${{ steps.versions.outputs.actionlint }}"
        ACTIONLINT_DIR: "${{ runner.temp }}/actionlint"
      # language=bash
      run: |
        mkdir -p ${ACTIONLINT_DIR}
        bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash) \
          ${ACTIONLINT_VERSION} \
          ${ACTIONLINT_DIR}
        echo "$ACTIONLINT_DIR" >> "${GITHUB_PATH}"

    - name: Run
      env:
        ACTION_PATH: ${{ github.action_path }}
        INPUT_GITHUB_TOKEN: ${{ inputs.github_token }}
        INPUT_TOOL_NAME: ${{ inputs.tool_name }}
        INPUT_LEVEL: ${{ inputs.level }}
        INPUT_REPORTER: ${{ inputs.reporter }}
        INPUT_FILTER_MODE: ${{ inputs.filter_mode }}
        INPUT_FAIL_LEVEL: ${{ inputs.fail_level }}
        INPUT_FAIL_ON_ERROR: ${{ inputs.fail_on_error }}
        INPUT_REVIEWDOG_FLAGS: ${{ inputs.reviewdog_flags }}
        INPUT_ACTIONLINT_FLAGS: ${{ inputs.actionlint_flags }}
      shell: bash
      run: $ACTION_PATH/../entrypoint.sh

branding:
  color: red
  icon: check-circle
